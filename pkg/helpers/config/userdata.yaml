#cloud-config
repo_update: true
package_update: true
packages:
  - docker
write_files:
  - path: /run-container.sh
    permissions: 755
    content: |
      #!/bin/bash
      # based on tls, set up docker run command.
      if [[ "${CACERT}" != "" ]]; then
        echo "${CACERT}" | base64 --decode > /proxy.pem
        sudo docker run -v /proxy.pem:/proxy.pem -e "HTTP_PROXY=${HTTP_PROXY}" -e "HTTPS_PROXY=${HTTPS_PROXY}" --env "AWS_REGION=${AWS_REGION}" -e "START_VERIFIER=${VALIDATOR_START_VERIFIER}" -e "END_VERIFIER=${VALIDATOR_END_VERIFIER}" ${VALIDATOR_IMAGE} --timeout=${TIMEOUT} --cacert=/proxy.pem --no-tls=${NOTLS}  >> /var/log/userdata-output || echo "Failed to successfully run the docker container"
      else
        sudo docker run --env "AWS_REGION=${AWS_REGION}" -e "HTTP_PROXY=${HTTP_PROXY}" -e "START_VERIFIER=${VALIDATOR_START_VERIFIER}" -e "END_VERIFIER=${VALIDATOR_END_VERIFIER}" ${VALIDATOR_IMAGE} --timeout=${TIMEOUT}  >> /var/log/userdata-output || echo "Failed to successfully run the docker container"
      fi
runcmd:
  - sudo service docker start 2>1 > /dev/null || echo "docker not started by systemctl"
  - echo "${USERDATA_BEGIN}" >> /var/log/userdata-output
  - sudo docker pull ${VALIDATOR_IMAGE}
  - /run-container.sh
  - echo "${USERDATA_END}" >> /var/log/userdata-output
  - cat /var/log/userdata-output >/dev/console
